parameters:
  - name: Simple
    type: string
    default: "Hello World"
  - name: Complex
    type: object
    default:
      - Build
  - name: Complex2
    type: object
    default:
      - Build
      - Second
      - Fourth
  - name: Complex3
    type: object
    default:
      - Second
      - Third
  - name: Complex4
    type: object
    default:
      - name: First
        displayName: "First job"
        children:
          - child1
          - child2
      - name: Second
        displayName: "Second job"
        children:
          - child3
          - child4

trigger:
  - main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Stage1
    jobs:
      - job: Build
        displayName: "Build job"
        steps:
          - script: |
              echo $Simple
              echo "##vso[task.setvariable variable=SimpleSimon;isOutput=true]Pie man"
              echo "##vso[task.setvariable variable=DependsOn;isOutput=true]Stage2Job1"
            displayName: "Run a one-line script"
            name: Step1
            env:
              Simple: ${{ parameters.Simple }}

      - job: Second
        displayName: "Second job"
        dependsOn: ${{ parameters.Complex }}

        steps:
          - script: echo $(Simple)
            displayName: "Run a one-line script"

      - job: Third
        displayName: "Third job"
        dependsOn: ${{ parameters.Complex2 }}

        steps:
          - script: echo $(Simple)
            displayName: "Run a one-line script"

      - job: Fourth
        displayName: "Fourth job"
        dependsOn:
          - Build
          - ${{ each item in parameters.Complex3 }}:
              - ${{ item }}

        steps:
          - script: echo $(Simple)
            displayName: "Run a one-line script"

          - ${{ each item in parameters.Complex4 }}:
              - script: |
                  echo "Name: ${{ item.name }}" 
                  echo "Kids: $kids"
                displayName: ${{ item.displayName }}
                env:
                  kids: ${{ convertToJson(item.children) }}

  - stage: Stage2
    dependsOn: Stage1
    variables:
      SimpleSimon: $[ stageDependencies.Stage1.Build.outputs['Step1.SimpleSimon'] ]
      stageDependencies: $[ convertToJson(stageDependencies) ]
      Dependencies: $[ stageDependencies.Stage1.Build.outputs['Step1.DependsOn'] ]

    jobs:
      - job: Stage2Job1
        displayName: "Stage 2 Job 1"
        steps:
          - script: echo $(SimpleSimon)
            displayName: "Run a one-line script"

      - template: template.yml
        parameters:
          Simple: $(SimpleSimon) # This works, as the expression is passed through and then evaluated at runtime
          # DependsOn: $(Dependencies) # This won't work, as it will fail with 'Stage Stage2 job TemplateJob depends on unknown job $(Dependencies).'
